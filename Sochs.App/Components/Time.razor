@using Sochs.Library.Events;
@using Sochs.Library.Interfaces;
@using Sochs.Library;
@using System.Runtime;
@inject ITimeService _timeService;
@implements IDisposable;

<div class="col-lg-12 text-center" style="background-color: blue;">
  <img src="@timeOfDayImagePath" />
  <h1 class="display" style="font-size: 12rem;">@timeAsString</h1>
</div>

@code {
  private string? timeAsString;
  private string? timeOfDayImagePath;


  protected override void OnInitialized()
  {
    _timeService.OnTimeUpdated += Handle;

    base.OnInitialized();
  }

  public void Handle(object? sender, TimeUpdatedEventArgs args)
  {
    if (args != null)
    {
      timeAsString               = args.DateTime.ToShortTimeString();
      timeOfDayImagePath = args.TimeOfDayImagePath;

      StateHasChanged();
    }
  }

  public void Dispose()
  {
    _timeService.OnTimeUpdated -= Handle;
  }
}
