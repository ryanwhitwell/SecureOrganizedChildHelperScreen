@using Sochs.Library.Events;
@using Sochs.Library.Interfaces;
@using Sochs.Library;
@using System.Runtime;
@using Sochs.Library.Models;
@inject IConfiguration _config;
@inject IWeatherService _weatherService;
@implements IDisposable;

<span class="display-2 text-center"><u>Clothes</u></span>

@if (!string.IsNullOrWhiteSpace(jacketImagePath)) {
  <div class="col-md-3 text-center">
    <img src="@jacketImagePath" class="h-100" />
  </div>
  <div class="col-md-3 text-center">
    <img src="@shirtImagePath" class="h-100" />
  </div>
  <div class="col-md-3 text-center">
    <img src="@pantsImagePath" class="h-100" />
  </div>
  <div class="col-md-3 text-center">
    <img src="@shoesImagePath" class="h-100" />
  </div>
}
else
{
  <div class="col-md-4 text-center">
    <img src="@shirtImagePath" class="h-100" />
  </div>
  <div class="col-md-4 text-center">
    <img src="@pantsImagePath" class="h-100" />
  </div>
  <div class="col-md-4 text-center">
    <img src="@shoesImagePath" class="h-100" />
  </div>
}


@code {
  private string? jacketImagePath;
  private string? shoesImagePath;
  private string? pantsImagePath;
  private string? shirtImagePath;

  protected override void OnInitialized()
  {
    _weatherService.OnWeatherUpdated += Handle;

    base.OnInitialized();
  }

  public void Handle(object? sender, WeatherUpdatedEventArgs args)
  {
    if (args != null && args.WeatherInfo != null)
    {
      jacketImagePath = args.JacketImagePath;
      shirtImagePath  = args.ShirtImagePath;
      pantsImagePath  = args.PantsImagePath;
      shoesImagePath  = args.ShoesImagePath;

      StateHasChanged();
    }
  }

  private void UpdateClothes(WeatherApiResponse weatherInfo)
  {
    _ = weatherInfo ?? throw new ArgumentNullException(nameof(weatherInfo));
  }

  public void Dispose()
  {
    _weatherService.OnWeatherUpdated -= Handle;
  }
}
