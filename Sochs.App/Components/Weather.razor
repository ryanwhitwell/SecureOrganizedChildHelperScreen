@inject IConfiguration _config;
@inject ILogger<Weather> _log;
@inject IWeatherService _weatherService;
@inject IJSRuntime _js;

@implements IDisposable;

<div class="col-12 mt-5">
  <div class="card shadow-lg">
    <!--
    <div class="card-header">
      Weather
    </div>
    -->
    <div class="card-body">
      <div class="container">

        <!-- Weather data -->
        <div class="row">
          <div class="col-sm-6 text-center">
            <img src="@conditionImagePath" />
            <p style="font-size: 3rem;">@condition</p>
          </div>
          <div class="col-sm-6 text-center">
            <img src="@temperatureImagePath" />
            <p style="font-size: 3em;">@temperature°F </p>
          </div>
        </div>

        <!-- Clothing recommendations -->
        <div class="row">
          @if (!string.IsNullOrWhiteSpace(jacketImagePath))
          {
            <div class="col-md-3 text-center">
              <img src="@jacketImagePath" class="h-100" />
            </div>
            <div class="col-md-3 text-center">
              <img src="@shirtImagePath" class="h-100" />
            </div>
            <div class="col-md-3 text-center">
              <img src="@pantsImagePath" class="h-100" />
            </div>
            <div class="col-md-3 text-center">
              <img src="@shoesImagePath" class="h-100" />
            </div>
          }
          else
          {
            <div class="col-md-4 text-center">
              <img src="@shirtImagePath" class="h-100" />
            </div>
            <div class="col-md-4 text-center">
              <img src="@pantsImagePath" class="h-100" />
            </div>
            <div class="col-md-4 text-center">
              <img src="@shoesImagePath" class="h-100" />
            </div>
          }
        </div>

      </div>
    </div>
  </div>
 </div>

@code {
  private string? temperature;
  private string? condition;
  private string? conditionImagePath;
  private string? temperatureImagePath;

  private string? jacketImagePath;
  private string? shoesImagePath;
  private string? pantsImagePath;
  private string? shirtImagePath;

  protected override void OnInitialized()
  {
    _weatherService.OnWeatherUpdated += Handle;

    base.OnInitialized();
  }

  public void Handle(object? sender, WeatherUpdatedEventArgs args)
  {
    if (args != null && args.WeatherInfo != null)
    {
      temperature          = args.WeatherInfo.Current?.FeelsLikeF.ToString("N0");
      condition            = args.WeatherInfo.Current?.Condition?.Text;
      conditionImagePath   = args.ConditionImagePath;
      temperatureImagePath = args.TemperatureImagePath;

      jacketImagePath = args.JacketImagePath;
      shirtImagePath = args.ShirtImagePath;
      pantsImagePath = args.PantsImagePath;
      shoesImagePath = args.ShoesImagePath;

      _log.LogTrace("Condition Image Path: {conditionImagePath}", conditionImagePath);

      StateHasChanged();
    }
  }

  public void Dispose()
  {
    _weatherService.OnWeatherUpdated -= Handle;
  }
}
