@using Sochs.Library.Events;
@using Sochs.Library.Logging;
@using Sochs.Library;

@inject HttpClient Http

<h3>Time Of Day</h3>

<p>@message</p>

@code {
  private string? message;

  public event EventHandler<TimeOfDayUpdatedEventArgs>? TimeOfDayUpdated;

  public void OnTimeOfDayUpdated()
  {
    Log.Info("Time of day updated.");

    TimeOfDayUpdated?.Invoke(this, new TimeOfDayUpdatedEventArgs());
  }

  protected override void OnInitialized()
  {
    UpdateTimeOfDay();

    base.OnInitialized();
  }

  private void UpdateTimeOfDay()
  {
    var autoEvent = new AutoResetEvent(false);
    var stateTimer = new Timer(UpdateTimeOfDay_Callback, autoEvent, new TimeSpan(0, 0, 0), new TimeSpan(0, 0, 5));
  }

  private void UpdateTimeOfDay_Callback(Object? stateInfo)
  {
    _ = stateInfo ?? throw new ArgumentNullException(nameof(stateInfo));
    
    AutoResetEvent autoEvent = (AutoResetEvent)stateInfo;

    message = $"Now is {DateTime.Now}";

    StateHasChanged();

    OnTimeOfDayUpdated();
  }
}
