@using Sochs.Library.Enums;
@using Sochs.Library.Events;
@using Sochs.Library.Interfaces;
@using Sochs.Library;
@using System.Runtime;

<div class="col-lg-6 mt-5 align-self-end">
  <div class="card shadow-lg">

    <!--
    <div class="card-header">
      Alice
    </div>
    -->

    <div class="card-body">
      <div class="container">
        <div class="row">
          <div class="col text-center">

            <button type="button" class="btn btn-primary-outline shadow-none" @onclick="() => TaskDialog?.Open()">
              <img src="img/Alice_avatar_cartoon.png" />
            </button>
            
            <ModalDialog @ref="@TaskDialog" Title="Alice's Tasks">
              <DailyTasks @ref="@DailyTasks" Child=_child />
            </ModalDialog>

          </div>
        </div>
      </div>
    </div>

  </div>
</div>

@code {
  private const Child _child = Child.Alice;

  private ModalDialog? TaskDialog { get; set; }

  private DailyTasks? DailyTasks { get; set; }

  private bool _morningTasksCompleted;
  private bool _afternoonTasksCompleted;
  private bool _eveningTasksCompleted;
  private bool _nightTasksCompleted;

  protected override void OnInitialized()
  {
    if (DailyTasks != null)
    {
      DailyTasks.OnDailyTaskAchievement += HandleAchievementEvent;
    }

    base.OnInitialized();
  }

  private void HandleAchievementEvent(object? sender, DailyTaskAchievementEventArgs args)
  {
    // calculate values for private member variables
  }

}
