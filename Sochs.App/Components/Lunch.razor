@using Sochs.Library.Events;
@using Sochs.Library.Interfaces;
@using Sochs.Library;
@using System.Runtime;
@inject ILunchService _lunchService;
@implements IDisposable;

<div class="col-12 @(showComponent ? "visible mt-5" : "invisible")">
  <div class="card shadow-lg">
    <div class="card-header">
      Today's Lunch
    </div>
    <div class="card-body">
      <p>
        Insert lunch data here
      </p>
    </div>
  </div>
</div>

@code {

  private bool showComponent;

  protected override void OnInitialized()
  {
    _lunchService.OnLunchUpdated += Handle;

    base.OnInitialized();
  }

  public void Handle(object? sender, LunchUpdatedEventArgs args)
  {
    if (args != null)
    {
      // Only show component when there's data to show
      showComponent = args.HasData;

      if (showComponent)
      {
        // TODO: Get lunch data
      }

      StateHasChanged();
    }
  }

  public void Dispose()
  {
    _lunchService.OnLunchUpdated -= Handle;
  }
}
