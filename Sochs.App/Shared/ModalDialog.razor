@using Sochs.Library.Interfaces;
@using Sochs.Library;

@inject IJSRuntime _js;

<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay; overflow-y: auto;">
  <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h2 class="modal-title" style="font-size: 5rem;">@Title</h2>
        <!--button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" @onclick="Close"></button>-->
      </div>
      <div class="modal-body">
        @ChildContent
        <div class="d-grid gap-2">
          <button type="button" class="btn btn-danger" @onclick="Close" style="font-size: 3rem;">Close</button>
        </div>
      </div>
      <!--
      <div class="model-footer">
      </div>
      -->
    </div>
  </div>
</div>

@if (showBackdrop)
{
  <div class="modal-backdrop fade show"></div>
}


@code {
  [Parameter]
  public string? Title { get; set; }

  [Parameter]
  public RenderFragment? ChildContent { get; set; }

  private string modalDisplay = "none;";
  private string modalClass   = string.Empty;
  private bool showBackdrop   = false;

  public void Open()
  {
    _js.InvokeVoidAsync("playClick");
    
    modalDisplay = "block";
    modalClass   = "show";
    showBackdrop = true;
  }

  public void Close()
  {
    _js.InvokeVoidAsync("playClick");

    modalDisplay = "none";
    modalClass   = string.Empty;
    showBackdrop = false;
  }
}